{"version":3,"sources":["Components/Structure/WelcomeWindow/Item.jsx","Components/Structure/WelcomeWindow/CarouselMain.jsx","Components/Structure/WelcomeWindow/CreateButtonMain.jsx","Components/Structure/WelcomeWindow/LoadButtonMain.jsx","Components/Structure/MenuWindow/InputForms.jsx","Components/Structure/MenuWindow/WelcomeMessage.jsx","Components/Structure/MenuWindow/ShowRecipe.jsx","Components/Structure/MenuWindow/Shopping.jsx","Components/Structure/MenuWindow/Menu.jsx","App.js","Components/Structure/Footer.jsx","reportWebVitals.js","Components/img/pic.svg","Components/Structure/About.jsx","index.js"],"names":["Item","props","src","item","name","className","description","CarouselMain","autoPlay","fullHeightHover","animation","interval","map","i","CreateButtonMain","onCreate","Tooltip","title","Button","style","textTransform","onClick","size","variant","LoadButtonMain","onLoad","CssTextField","withStyles","root","color","borderBottomColor","borderColor","TextField","InputForms","onAdd","RecipeToBeEdited","useState","recipeName","setRecipeName","recipeDescription","setRecipeDescription","IngredientListFiltered","IngredientList","setIngredientList","onChangeIngredient","index","event","preventDefault","persist","prev","target","value","errors","length","onSubmit","e","alert","_id","id","Grid","container","label","placeholder","helperText","fullWidth","margin","required","onChange","multiline","rows","marginTop","alignItems","justify","direction","spacing","wrap","xs","align","ingredientName","InputLabelProps","shrink","type","inputProps","min","step","ingredientQuantity","ingredientUnit","IconButton","aria-label","filter","handleRemoveIngredient","ButtonGroup","backgroundColor","inputState","someEmpty","some","allPrev","prevIsValid","form","WelcomeMessage","minHeight","Typography","component","ShowRecipe","recipeToShow","Shopping","RemoveRecipeFromShopping","RecipeForShopping","IngredientListForShopping","cursor","fontSize","ButtonDisabled","pointerEvents","MuiButton","ButtonWithTooltip","tooltipText","disabled","other","adjustedButtonProps","undefined","Menu","loadFromServer","showAddRecipeForm","setShowAddRecipeForm","showRecipeData","setShowRecipeData","showEditRecipe","setShowEditRecipe","showShopping","setShowShopping","RecipeList","setRecipeList","RecipeToBeShown","setRecipeToBeShown","RecipeToEdit","setRecipeToEdit","indexForEditing","setIndexForEditing","addRecipeForShopping","setAddRecipeForShopping","setIngredientListForShopping","useEffect","load","a","fetchRecipes","recipesFromServer","getRecipes","fetch","res","json","data","addRecipe","Recipe","newArr","method","headers","body","JSON","stringify","console","log","handleRemoveRecipe","itemToDelete","handleShopping","newArr2","parse","reduce","c","same","find","v","parseFloat","push","oldArray","x","indexValue","findIndex","Math","round","Number","EPSILON","splice","alignContent","endIcon","marginBottom","handleShowRecipe","sort","b","handleAddRecipeForShopping","handleEditRecipe","App","showCreateRecipe","setShowCreateRecipe","setLoadFromServer","Container","Footer","maxWidth","to","Date","getFullYear","Link","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPic","_ref","svgRef","titleId","xmlns","xmlnsXlink","width","height","viewBox","ref","stroke","fillRule","fill","fillOpacity","d","ForwardRef","About","ReactDOM","render","StrictMode","path","exact","document","getElementById"],"mappings":"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","file":"static/js/main.0d7bf0e9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function Item(props) {\r\n\r\n    return (\r\n        <div>\r\n            <img src={`/img/${props.item.name}.jpg`} />\r\n            <div className=\"textContainer\">\r\n                <p className=\"textToShow\" >{props.item.description}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Carousel from 'react-material-ui-carousel';\r\nimport { Item } from './Item';\r\n\r\nexport const CarouselMain = () => {\r\n    var items = [\r\n        {\r\n            name: \"1\",\r\n            description: \"Create your recipes\"\r\n        },\r\n        {\r\n            name: \"2\",\r\n            description: \"Add ingredients\"\r\n        },\r\n        {\r\n            name: \"3\",\r\n            description: \"Make a shopping list\"\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <Carousel\r\n            autoPlay={true}\r\n            fullHeightHover={false}\r\n            animation=\"slide\"\r\n            interval=\"4000\"\r\n            \r\n        >\r\n            {\r\n                items.map((item, i) => <Item key={i} item={item} />)\r\n            }\r\n        </Carousel>\r\n    )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '@material-ui/core/Button'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nconst CreateButtonMain = ({ onCreate }) => {\r\n    return (\r\n\r\n        <Tooltip title=\"Create recipes. (Caution: you may overwrite already existing recipes on the server)\">\r\n        <Button style={{ textTransform: \"none\" }}onClick={onCreate}className=\" myBtn\"size=\"large\"variant=\"contained\"> \r\n            Creat\r\n        </Button>\r\n        </Tooltip>\r\n\r\n    )\r\n}\r\nCreateButtonMain.propTypes = {\r\n    onClick: PropTypes.func,\r\n}\r\nexport default CreateButtonMain\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '@material-ui/core/Button'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nconst LoadButtonMain = ({ onLoad }) => {\r\n\r\n    return (\r\n        <Tooltip title=\"Load last recipes from the server.\">\r\n            <Button style={{ textTransform: \"none\" }} onClick={onLoad}  className=\"tooltip myBtn\" size=\"large\" variant=\"contained\">Load\r\n            </Button>\r\n        </Tooltip>\r\n\r\n    )\r\n}\r\nLoadButtonMain.propTypes = {\r\n    onClick: PropTypes.func,\r\n}\r\nexport default LoadButtonMain\r\n","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useState } from 'react'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { fade, ThemeProvider, withStyles, makeStyles, createMuiTheme, } from '@material-ui/core/styles';\r\n\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: 'black',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'black',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: '#7e8ca7',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'black',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: '#969696',\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\n\r\n\r\n\r\nconst InputForms = ({ onAdd, RecipeToBeEdited }) => {\r\n\r\n    const [recipeName, setRecipeName] = useState(RecipeToBeEdited ? RecipeToBeEdited.recipeName : '')\r\n    const [recipeDescription, setRecipeDescription] = useState(RecipeToBeEdited ? RecipeToBeEdited.recipeDescription : '')\r\n    const [IngredientList, setIngredientList] = useState(RecipeToBeEdited ? [...RecipeToBeEdited?.IngredientListFiltered] : [])\r\n\r\n    const prevIsValid = () => {\r\n        if (IngredientList.length === 0) {\r\n            return true;\r\n        }\r\n\r\n        const someEmpty = IngredientList.some(\r\n            (item) => item.ingredientName === '' || item.ingredientUnit === '' || item.ingredientQuantity === '');\r\n\r\n\r\n        if (someEmpty) {\r\n            IngredientList.map((item, index) => {\r\n                const allPrev = [...IngredientList];\r\n\r\n                if (IngredientList[index].ingredientName === \"\") {\r\n                    allPrev[index].errors.ingredientName = \"Ingredient's name is required\";\r\n                }\r\n\r\n                if (IngredientList[index].ingredientQuantity === \"\") {\r\n                    allPrev[index].errors.ingredientQuantity = \"Ingredient's quantity is required\";\r\n                }\r\n\r\n                if (IngredientList[index].ingredientUnit === \"\") {\r\n                    allPrev[index].errors.ingredientUnit = \"Ingredient's unit is required\";\r\n                }\r\n\r\n                setIngredientList(allPrev);\r\n            })\r\n        }\r\n        return !someEmpty;\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!recipeName || !recipeDescription || (IngredientList.length <= 0)) {\r\n            alert('Please fill all the inputs and add ingredients')\r\n            return\r\n        }\r\n        let IngredientListFiltered = IngredientList.map(function (item) {\r\n            delete item.errors;\r\n            return item\r\n        });\r\n        if (!RecipeToBeEdited) {\r\n            //const _id = Math.floor(Math.random() * 10000) + 1\r\n            onAdd({ recipeName, recipeDescription, IngredientListFiltered })\r\n        }\r\n        else {\r\n            const _id = RecipeToBeEdited._id\r\n            onAdd({ _id, recipeName, recipeDescription, IngredientListFiltered })\r\n        }\r\n        RecipeToBeEdited ? alert('The recipe has been modified!') : alert('The recipe has been added!')\r\n    }\r\n\r\n    const handleAddIngredient = (e) => {\r\n        e.preventDefault();\r\n        const inputState = {\r\n            ingredientName: \"\",\r\n            ingredientQuantity: \"\",\r\n            ingredientUnit: \"\",\r\n\r\n            errors: {\r\n                ingredientName: null,\r\n                ingredientQuantity: null,\r\n                ingredientUnit: null,\r\n            }\r\n        };\r\n        if (prevIsValid()) {\r\n            setIngredientList((prev) => [...prev, inputState]);\r\n        }\r\n    }\r\n    const onChangeIngredient = (index, event) => {\r\n        event.preventDefault();\r\n        event.persist();\r\n\r\n        setIngredientList(prev => {\r\n            return prev.map((item, i) => {\r\n                if (i !== index) {\r\n                    return item;\r\n                }\r\n                return {\r\n                    ...item,\r\n                    [event.target.name]: event.target.value,\r\n\r\n                    errors: {\r\n\r\n                        ...item.errors,\r\n                        [event.target.name]:\r\n                            event.target.value.length > 0\r\n                                ? null : [event.target.name] + \"Is required\",\r\n                    },\r\n                };\r\n            });\r\n        });\r\n    };\r\n    const handleRemoveIngredient = (e, index) => {\r\n        e.preventDefault();\r\n        setIngredientList((prev) => prev.filter((item) => item !== prev[index]));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} id=\"Recipe\" className=\"WordWrap\">\r\n                <Grid container className=\"scrollbar \" id=\"style-4\" >\r\n                    <CssTextField\r\n                        id=\"outlined-full-width\"\r\n                        label=\"Name\"\r\n                        placeholder=\"e.g Kebab\"\r\n                        helperText=\"Enter recipe's name\"\r\n                        fullWidth={true}\r\n                        margin=\"normal\"\r\n                        className=\"paragraph\"\r\n                        required\r\n                        value={recipeName}\r\n                        onChange={(e) => setRecipeName(e.target.value)}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <CssTextField\r\n                        id=\"outlined-multiline-static\"\r\n                        label=\"Description\"\r\n                        multiline\r\n                        className=\"paragraph\"\r\n                        rows={4}\r\n                        placeholder=\"e.g Some ingredients\"\r\n                        variant=\"outlined\"\r\n                        helperText=\"Enter recipe's description\"\r\n                        fullWidth={true}\r\n                        value={recipeDescription}\r\n                        onChange={(e) => setRecipeDescription(e.target.value)}\r\n                        required\r\n                    />\r\n                </Grid >\r\n\r\n                {/* {JSON.stringify(IngredientList)} */}\r\n\r\n\r\n                <div id=\"Ingredient\">\r\n                    {\r\n                        IngredientList.map((item, index) => (\r\n                            <Grid key={`item-${index}`} container style={{ marginTop: \"20px\" }} alignItems=\"center\" className=\"paragraph\" justify=\"center\" direction=\"row\" spacing={5} wrap=\"wrap\">\r\n                                <Grid item xs={1} align=\"center\" >\r\n                                    #{index + 1}\r\n\r\n\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <CssTextField\r\n                                        required\r\n                                        label=\"Name\"\r\n                                        placeholder=\"e.g Meat\"\r\n                                        className=\"paragraph\"\r\n                                        variant=\"outlined\"\r\n                                        name=\"ingredientName\"\r\n                                        //error={item.errors.ingredientName ? true : false}\r\n\r\n                                        value={item.ingredientName}\r\n                                        onChange={(e) => onChangeIngredient(index, e)}\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs >\r\n                                    <CssTextField\r\n                                        label=\"Quantity\"\r\n                                        type=\"number\"\r\n                                        placeholder=\"e.g 10\"\r\n                                        className=\"paragraph\"\r\n                                        variant=\"outlined\"\r\n                                        inputProps={{ min: \"0.01\", step: \"0.01\" }}\r\n                                        //error={item.errors.ingredientQuantity ? true : false}\r\n\r\n                                        required\r\n                                        name=\"ingredientQuantity\"\r\n                                        // className={\r\n                                        //     item.errors.ingredientQuantity\r\n                                        // }\r\n                                        value={item.ingredientQuantity}\r\n                                        className=\"paragraph\"\r\n                                        onChange={(e) => onChangeIngredient(index, e)}\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs >\r\n                                    <CssTextField\r\n                                        required\r\n                                        label=\"Unit\"\r\n                                        placeholder=\"e.g Kg\"\r\n                                        variant=\"outlined\"\r\n                                        name=\"ingredientUnit\"\r\n                                        className=\"paragraph\"\r\n\r\n                                        //error={item.errors.ingredientUnit ? true : false}\r\n\r\n                                        // className={\r\n                                        //     item.errors.ingredientUnit\r\n                                        // }\r\n                                        value={item.ingredientUnit}\r\n                                        onChange={(e) => onChangeIngredient(index, e)}\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item >\r\n                                    <IconButton aria-label=\"delete\" color=\"secondary\" onClick={(e) => handleRemoveIngredient(e, index)}>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        ))\r\n                    }\r\n\r\n                </div>\r\n\r\n                <ButtonGroup style={{ backgroundColor: \"#969696\" }} aria-label=\"outlined primary button group\" fullWidth={true} style={{ marginTop: \"10px\" }}>\r\n                    <Button onClick={handleAddIngredient} type=\"submit\" form=\"Ingredient\" size=\"large\" variant=\"contained\" fullWidth={true} style={{ textTransform: \"none\" }}>Add ingredient</Button>\r\n                    <Button type=\"submit\" form=\"Recipe\" size=\"large\" variant=\"contained\" fullWidth={true} style={{ textTransform: \"none\" }}>Save recipe</Button>\r\n                </ButtonGroup>\r\n\r\n\r\n            </form >\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputForms","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nconst WelcomeMessage = () => {\r\n    return (\r\n        <Grid container spacing={0}\r\n            className=\"threeD paragraph\"\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            style={{ minHeight: '40vh' }}>\r\n            <Grid item xs={12} className=\"WordWrap\">\r\n                <Typography variant=\"h1\" component=\"h2\" align=\"center\">\r\n                    Welcome!\r\n            </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} className=\"WordWrap\">\r\n                <Typography variant=\"subtitle1\" component=\"h2\" align=\"center\">\r\n                    Please select any available recipe or press any button\r\n            </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default WelcomeMessage","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nfunction ShowRecipe({ recipeToShow }) {\r\n    // console.log(JSON.stringify(recipeToShow))\r\n    return (\r\n        <>\r\n            <Grid container className=\"scrollbar \" id=\"style-4\" spacing={3} direction=\"column\">\r\n                <Grid item className=\"header\">\r\n                    {recipeToShow.recipeName}\r\n                </Grid>\r\n                <Grid item className=\"paragraphRecipe\">\r\n                    {recipeToShow.recipeDescription}\r\n                </Grid>\r\n                <Grid item className=\"paragraphRecipe\">\r\n                    You will need:\r\n                </Grid>\r\n                <Grid item >\r\n                    {recipeToShow.IngredientListFiltered.map((item, index) => (\r\n                        <Grid key={`item-${index}`} item className=\"paragraphRecipe\">\r\n                            {(index + 1) +\") \" + item.ingredientName + \" \" + item.ingredientQuantity + \" \" + item.ingredientUnit}\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShowRecipe\r\n","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\r\nconst Shopping = ({ RemoveRecipeFromShopping, RecipeForShopping, IngredientListForShopping }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Grid container>\r\n                <Grid container spacing={2}>\r\n                    {\r\n                        RecipeForShopping &&\r\n                        RecipeForShopping.map((item, index) => (\r\n                            <Grid key={`item-${index}`} item xs={3} >\r\n                                <div className=\"RecipeNameShopping\">\r\n                                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                                        <Grid item xs={10} className=\"truncate\">\r\n                                            {item.recipeName}\r\n                                        </Grid>\r\n                                        <Grid item xs={2} >\r\n                                            <DeleteForeverOutlinedIcon\r\n                                                className=\"ActionButtonShopping\"\r\n                                                color=\"secondary\"\r\n                                                align=\"center\" justify=\"center\"\r\n                                                style={{ cursor: 'pointer', fontSize: 17 }}\r\n\r\n                                                onClick={() => RemoveRecipeFromShopping(index)}\r\n\r\n                                            />\r\n\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n\r\n                            </Grid>\r\n                        ))\r\n                    }\r\n\r\n                    {IngredientListForShopping &&\r\n                        <Grid container style={{ marginTop: \"10px\" }}>\r\n                            <Grid item >\r\n                                <Grid item className=\"paragraphRecipe\">\r\n                                {IngredientListForShopping.length > 0 && \"You will need:\"}\r\n                    </Grid>\r\n                                {IngredientListForShopping.map((item, index) => (\r\n                                    <Grid key={`item-${index}`} item className=\"paragraphRecipe\">\r\n                                        {(index + 1) + \") \" + item.ingredientName + \" \" + item.ingredientQuantity + \" \" + item.ingredientUnit}\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                        </Grid>\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Shopping\r\n","import React, { useState, useEffect } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\r\nimport InputForms from './InputForms'\r\nimport WelcomeMessage from './WelcomeMessage'\r\nimport ShowRecipe from './ShowRecipe'\r\nimport Shopping from './Shopping'\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\r\nimport CloudUploadOutlinedIcon from '@material-ui/icons/CloudUploadOutlined';\r\nimport CloudDownloadOutlinedIcon from '@material-ui/icons/CloudDownloadOutlined';\r\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\r\nimport MuiButton from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n\r\nconst ButtonDisabled = withStyles({\r\n    root: {\r\n        \"&.Mui-disabled\": {\r\n            pointerEvents: \"auto\"\r\n        }\r\n    }\r\n})(MuiButton);\r\nconst ButtonWithTooltip = ({ tooltipText, disabled, onClick, ...other }) => {\r\n    const adjustedButtonProps = {\r\n        disabled: disabled,\r\n        component: disabled ? \"div\" : undefined,\r\n        onClick: disabled ? undefined : onClick\r\n    };\r\n    return (\r\n        <Tooltip title={tooltipText}>\r\n            <ButtonDisabled {...other} {...adjustedButtonProps} />\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\n\r\nconst Menu = ({ loadFromServer }) => {\r\n    const [showAddRecipeForm, setShowAddRecipeForm] = useState(false)\r\n    const [showRecipeData, setShowRecipeData] = useState(false)\r\n    const [showEditRecipe, setShowEditRecipe] = useState(false)\r\n    const [showShopping, setShowShopping] = useState(false)\r\n    const [RecipeList, setRecipeList] = useState([])\r\n    const [RecipeToBeShown, setRecipeToBeShown] = useState()\r\n    const [RecipeToEdit, setRecipeToEdit] = useState()\r\n    const [indexForEditing, setIndexForEditing] = useState()\r\n    const [addRecipeForShopping, setAddRecipeForShopping] = useState([])\r\n    const [IngredientListForShopping, setIngredientListForShopping] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (loadFromServer) {\r\n            load()\r\n        }\r\n    }, [])\r\n    const load = async () => {\r\n        const getRecipes = async () => {\r\n            const recipesFromServer = await fetchRecipes()\r\n            if (recipesFromServer.length <= 0) {\r\n                alert('No available recipes found on the server! Create a new one.')\r\n            }\r\n            setRecipeList(recipesFromServer)\r\n        }\r\n        getRecipes()\r\n    }\r\n    // Fetch Recipes\r\n    const fetchRecipes = async () => {\r\n        const res = await fetch('https://recipe-planner-pw.herokuapp.com/RecipeList')\r\n        const data = await res.json()\r\n        return data\r\n    }\r\n\r\n    const addRecipe = async (Recipe) => {\r\n\r\n        if (showEditRecipe && (typeof indexForEditing !== 'undefined' && indexForEditing !== null)) {\r\n            let newArr = [...RecipeList]\r\n            newArr[indexForEditing] = Recipe\r\n            const res = await fetch('https://recipe-planner-pw.herokuapp.com/RecipeList/' + Recipe._id, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify(newArr[indexForEditing])\r\n            })\r\n            const data = await res.json()\r\n            load()\r\n        }\r\n        else {\r\n            console.log(\"Hello kurwa\")\r\n            const res = await fetch('https://recipe-planner-pw.herokuapp.com/add-recipe', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify(Recipe)\r\n            })\r\n            const data = await res.json()\r\n            load()\r\n        }\r\n\r\n        setShowAddRecipeForm(false)\r\n        setShowRecipeData(false)\r\n        setShowEditRecipe(false)\r\n    }\r\n    const handleRemoveRecipe = async (e, itemToDelete, index) => {\r\n\r\n        e.preventDefault();\r\n        await fetch(`https://recipe-planner-pw.herokuapp.com/RecipeList/${itemToDelete._id}`, {\r\n            method: 'DELETE',\r\n        })\r\n        setRecipeList((prev) => prev.filter((item) => item !== prev[index]));\r\n        setShowRecipeData(false)\r\n        setShowAddRecipeForm(false)\r\n        setShowEditRecipe(false)\r\n    }\r\n\r\n    const handleShowRecipe = (e, item) => {\r\n        e.preventDefault();\r\n        setShowRecipeData(!showRecipeData)\r\n        setShowAddRecipeForm(false)\r\n        setShowEditRecipe(false)\r\n        setRecipeToBeShown(item)\r\n    }\r\n    const handleEditRecipe = (e, item, index) => {\r\n        e.preventDefault();\r\n        setShowEditRecipe(true)\r\n        setShowAddRecipeForm(true)\r\n        setShowRecipeData(false)\r\n        setRecipeToEdit(item)\r\n        setIndexForEditing(index)\r\n    }\r\n    const handleShopping = (e) => {\r\n        e.preventDefault();\r\n        setShowShopping(!showShopping)\r\n        setShowAddRecipeForm(false)\r\n        setShowRecipeData(false)\r\n        setShowEditRecipe(false)\r\n        setAddRecipeForShopping()\r\n        setIngredientListForShopping()\r\n    }\r\n    const handleAddRecipeForShopping = (e, item, index) => {\r\n        e.preventDefault();\r\n        addRecipeForShopping ? setAddRecipeForShopping((prev) => [...prev, item]) : setAddRecipeForShopping([item]);\r\n        let newArr = JSON.parse(JSON.stringify(item.IngredientListFiltered));\r\n        // get rid of duplicates\r\n        newArr = newArr.reduce((a, c) => {\r\n            var same = a.find(v => v.ingredientName == c.ingredientName && v.ingredientUnit == c.ingredientUnit);\r\n            if (same) {\r\n                same.ingredientQuantity = parseFloat(same.ingredientQuantity) + parseFloat(c.ingredientQuantity);\r\n            } else {\r\n                a.push(c);\r\n            }\r\n            return a;\r\n        }, []);\r\n        if (!IngredientListForShopping || IngredientListForShopping.length === 0) {\r\n            newArr.sort((a, b) => (a.ingredientName > b.ingredientName) ? 1 : -1)\r\n            setIngredientListForShopping(newArr)\r\n        }\r\n        else {\r\n            let oldArray = JSON.parse(JSON.stringify(IngredientListForShopping));\r\n            for (let i = 0; i < newArr.length; i++) {\r\n                if (oldArray.some(x => x.ingredientName === newArr[i].ingredientName && x.ingredientUnit === newArr[i].ingredientUnit)) {\r\n                    const indexValue = oldArray.findIndex(x => x.ingredientName === newArr[i].ingredientName && x.ingredientUnit === newArr[i].ingredientUnit)\r\n                    if (indexValue !== (-1)) {\r\n                        oldArray[indexValue].ingredientQuantity = Math.round(((parseFloat(oldArray[indexValue].ingredientQuantity) + parseFloat(newArr[i].ingredientQuantity)) + Number.EPSILON) * 100) / 100;\r\n                    }\r\n                }\r\n                else {\r\n                    oldArray.push(newArr[i])\r\n                }\r\n            }\r\n            oldArray.sort((a, b) => (a.ingredientName > b.ingredientName) ? 1 : -1)\r\n            setIngredientListForShopping(oldArray)\r\n        }\r\n    }\r\n    const RemoveRecipeFromShopping = (index) => {\r\n        const newArr2 = [...addRecipeForShopping]\r\n        // get rid of duplicates\r\n        let newArr = JSON.parse(JSON.stringify(addRecipeForShopping[index].IngredientListFiltered));\r\n        newArr = newArr.reduce((a, c) => {\r\n            var same = a.find(v => v.ingredientName == c.ingredientName && v.ingredientUnit == c.ingredientUnit);\r\n            if (same) {\r\n                same.ingredientQuantity = parseFloat(same.ingredientQuantity) + parseFloat(c.ingredientQuantity);\r\n            } else {\r\n                a.push(c);\r\n            }\r\n            return a;\r\n        }, []);\r\n\r\n        if (IngredientListForShopping && IngredientListForShopping.length !== 0) {\r\n            let oldArray = JSON.parse(JSON.stringify(IngredientListForShopping));\r\n            for (let i = 0; i < newArr.length; i++) {\r\n                if (oldArray.some(x => x.ingredientName === newArr[i].ingredientName && x.ingredientUnit === newArr[i].ingredientUnit)) {\r\n                    const indexValue = oldArray.findIndex(x => x.ingredientName === newArr[i].ingredientName && x.ingredientUnit === newArr[i].ingredientUnit)\r\n                    if (indexValue !== (-1)) {\r\n                        oldArray[indexValue].ingredientQuantity = Math.round(((parseFloat(oldArray[indexValue].ingredientQuantity) - parseFloat(newArr[i].ingredientQuantity)) + Number.EPSILON) * 100) / 100;\r\n                        if (oldArray[indexValue].ingredientQuantity <= 0)\r\n                            oldArray.splice(indexValue, 1)\r\n                    }\r\n                }\r\n            }\r\n\r\n            setIngredientListForShopping(oldArray)\r\n        }\r\n        newArr2.splice(index, 1)\r\n        setAddRecipeForShopping(newArr2);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container alignContent=\"center\" justify=\"center\" className=\"MenuHeaderButtonsMarginBot\">\r\n\r\n\r\n                {!showShopping\r\n                    ? [\r\n                        RecipeList.length > 0\r\n                            ? [\r\n                                <ButtonGroup size=\"large\" aria-label=\"small button group\" variant=\"contained\" fullWidth={true} style={{ backgroundColor: \"#969696\" }}>\r\n                                    <Button style={{ textTransform: \"none\" }} onClick={load} endIcon={<CloudDownloadOutlinedIcon />}>Load</Button>\r\n                                    <Button style={{ textTransform: \"none\" }} endIcon={<ShoppingCartOutlinedIcon />} onClick={(e) => { handleShopping(e) }}>Shopping </Button>\r\n                                </ButtonGroup>\r\n                            ]\r\n                            : [\r\n                                <ButtonGroup size=\"large\" aria-label=\"small button group\" variant=\"contained\" fullWidth={true} style={{ backgroundColor: \"#969696\" }}>\r\n\r\n                                    <Button style={{ textTransform: \"none\" }} onClick={load} endIcon={<CloudDownloadOutlinedIcon />}>Load</Button>\r\n                                    <ButtonWithTooltip tooltipText=\"Add some recipes before shopping\" style={{ textTransform: \"none\" }} endIcon={<ShoppingCartOutlinedIcon />} disabled>\r\n                                        {\"Shopping\"}\r\n                                    </ButtonWithTooltip>\r\n                                </ButtonGroup>\r\n\r\n\r\n                            ]\r\n                    ]\r\n                    :\r\n                    <ButtonGroup size=\"large\" aria-label=\"small button group\" variant=\"contained\" fullWidth={true} style={{ backgroundColor: \"#969696\" }}>\r\n                        <ButtonWithTooltip tooltipText=\"Close the shopping list before loading\" style={{ textTransform: \"none\" }} endIcon={<CloudDownloadOutlinedIcon />} disabled>{\"Load\"}</ButtonWithTooltip>\r\n                        {RecipeList.length > 0\r\n                            ? <Button style={{ textTransform: \"none\" }} endIcon={<ShoppingCartOutlinedIcon />} onClick={(e) => { handleShopping(e) }}>Shopping </Button>\r\n                            : <ButtonWithTooltip tooltipText=\"Add some recipes before shopping\" style={{ textTransform: \"none\" }} endIcon={<ShoppingCartOutlinedIcon />} disabled>\r\n                                {\"Shopping\"}\r\n                            </ButtonWithTooltip>}\r\n                    </ButtonGroup>\r\n                }\r\n            </Grid>\r\n            <Grid container >\r\n                <Grid item xs={4} >\r\n                    <Grid item className=\"left scrollbar containerMenu\" style={{ marginTop: \"10px\", marginBottom: \"10px\" }} id=\"style-4\" >\r\n                        {(RecipeList.length === 0) ?\r\n                            <Grid container\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n\r\n                                style={{ minHeight: '50vh' }}>\r\n                                <Grid item xs={12} className=\"WordWrap paragraph\" >\r\n                                    <h4>Currently nothing is here!</h4>\r\n                                </Grid>\r\n                            </Grid>\r\n                            : RecipeList.map((item, index) => (\r\n                                <Grid key={`item-${index}`} container>\r\n                                    <Grid container className=\"RecipeName\" alignItems=\"center\">\r\n                                        <Grid item xs={10} className=\"WordWrap paragraph\" >\r\n                                            <h3 onClick={(e) => showShopping ? \"\" : handleShowRecipe(e, item)}>\r\n                                                {item.recipeName}</h3>\r\n                                        </Grid>\r\n                                        {showShopping ?\r\n                                            <>\r\n                                                <Grid item xs={2} align=\"center\" >\r\n                                                    <AddOutlinedIcon\r\n                                                        className=\"ActionButton\"\r\n                                                        style={{ cursor: 'pointer' }}\r\n                                                        onClick={(e) => { handleAddRecipeForShopping(e, item, index) }}\r\n                                                    />\r\n                                                </Grid>\r\n\r\n                                            </>\r\n                                            : <>\r\n                                                <Grid item xs={1}>\r\n                                                    <EditOutlinedIcon\r\n                                                        className=\"ActionButton\"\r\n                                                        style={{ cursor: 'pointer' }}\r\n                                                        onClick={(e) => { handleEditRecipe(e, item, index) }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={1}>\r\n                                                    <DeleteForeverOutlinedIcon\r\n                                                        className=\"ActionButton\"\r\n                                                        color=\"secondary\"\r\n                                                        style={{ cursor: 'pointer' }}\r\n                                                        onClick={(e) => handleRemoveRecipe(e, item, index)}\r\n\r\n                                                    />\r\n\r\n                                                </Grid>\r\n                                            </>\r\n                                        }\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            ))}\r\n                    </Grid>\r\n                    {(() => {\r\n                        if (showAddRecipeForm)\r\n                            return <Button onClick={() => (\r\n                                setShowAddRecipeForm(!showAddRecipeForm),\r\n                                setShowEditRecipe(false),\r\n                                setShowRecipeData(false))}\r\n                                size=\"large\"\r\n                                variant=\"contained\"\r\n                                style={{ backgroundColor: \"#969696\" }}\r\n                                fullWidth={true}\r\n                                style={{ textTransform: \"none\" }}\r\n                            >\r\n                                Cancel\r\n                                </Button>\r\n                        else if (showRecipeData || showEditRecipe)\r\n                            return <Button onClick={() => (\r\n                                setShowAddRecipeForm(false),\r\n                                setShowEditRecipe(false),\r\n                                setShowRecipeData(false)\r\n                            )}\r\n                                size=\"large\"\r\n                                variant=\"contained\"\r\n                                style={{ backgroundColor: \"#969696\" }}\r\n                                fullWidth={true}\r\n                                style={{ textTransform: \"none\" }}\r\n                            >\r\n                                Cancel\r\n                                </Button>\r\n                        else if (showShopping)\r\n                            return <Button onClick={() => (\r\n                                setShowAddRecipeForm(false),\r\n                                setShowEditRecipe(false),\r\n                                setShowRecipeData(false),\r\n                                setShowShopping(false)\r\n                            )}\r\n                                size=\"large\"\r\n                                variant=\"contained\"\r\n                                style={{ backgroundColor: \"#969696\" }}\r\n                                fullWidth={true}\r\n                                style={{ textTransform: \"none\" }}\r\n                            >\r\n                                Close the shopping list\r\n                                </Button>\r\n\r\n                        else if (!showAddRecipeForm)\r\n                            return <Button onClick={() => (\r\n                                setShowAddRecipeForm(!showAddRecipeForm),\r\n                                setShowEditRecipe(false),\r\n                                setShowRecipeData(false))}\r\n                                size=\"large\"\r\n                                variant=\"contained\"\r\n                                style={{ backgroundColor: \"#969696\" }}\r\n                                fullWidth={true}\r\n                                style={{ textTransform: \"none\" }}\r\n                            >\r\n                                Add Recipe\r\n                                    </Button>\r\n\r\n                    })()}\r\n\r\n                </Grid>\r\n                <Grid item xs={8} className=\"right scrollbar containerMenu WordWrap\" id=\"style-4\">\r\n                    {(() => {\r\n                        if (!showRecipeData && !showAddRecipeForm && !showEditRecipe && !showShopping)\r\n                            return <WelcomeMessage />;\r\n                        else if (showAddRecipeForm) {\r\n                            if (!showEditRecipe)\r\n                                return <InputForms onAdd={addRecipe} />;\r\n                            else if (showEditRecipe)\r\n                                return <InputForms onAdd={addRecipe} RecipeToBeEdited={RecipeToEdit} />\r\n                            else if (showAddRecipeForm && showEditRecipe)\r\n                                return setShowEditRecipe(false)\r\n                        }\r\n                        else if (showRecipeData && !showEditRecipe)\r\n                            return <ShowRecipe recipeToShow={RecipeToBeShown} />;\r\n                        else if (showShopping)\r\n                            return <Shopping RemoveRecipeFromShopping={RemoveRecipeFromShopping} RecipeForShopping={addRecipeForShopping} IngredientListForShopping={IngredientListForShopping} />\r\n\r\n                    })()}\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Menu\r\n","import Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { CarouselMain } from './Components/Structure/WelcomeWindow/CarouselMain.jsx';\r\nimport CreateButtonMain from './Components/Structure/WelcomeWindow/CreateButtonMain';\r\nimport LoadButtonMain from './Components/Structure/WelcomeWindow/LoadButtonMain';\r\nimport { useState } from 'react'\r\nimport Menu from './Components/Structure/MenuWindow/Menu'\r\n\r\nfunction App() {\r\n  const [showCreateRecipe, setShowCreateRecipe] = useState(true)\r\n  const [loadFromServer, setLoadFromServer] = useState(false)\r\n  return (\r\n    <div className=\"App\" >\r\n      <Container className=\"container\">\r\n        {showCreateRecipe && <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\r\n          <Grid item >\r\n            <CarouselMain />\r\n          </Grid>\r\n          <Grid item >\r\n            <div className=\"btn\">\r\n              <CreateButtonMain onCreate={() => setShowCreateRecipe(!showCreateRecipe)} />\r\n              <LoadButtonMain onLoad={() => {setShowCreateRecipe(!showCreateRecipe), setLoadFromServer(!loadFromServer)}}/>\r\n            </div>\r\n          </Grid>\r\n        </Grid>}\r\n        {showCreateRecipe ? <></> : <Menu loadFromServer={loadFromServer}/> }\r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LinkMaterial from '@material-ui/core/Link';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        \r\n            <Container maxWidth={false} className=\"footer\" >\r\n                <Link to='/about' style={{ color: 'white' }}>About</Link>\r\n                <div className=\"text\">&copy; {new Date().getFullYear()} Vladyslav Makartet</div>\r\n\r\n                <LinkMaterial href=\"https://www.linkedin.com/in/vladyslav-makartet-4712ba196/\"><LinkedInIcon style={{ color: 'white' }} /></LinkMaterial>\r\n                <LinkMaterial href=\"https://github.com/vladyslavmakartet\"><GitHubIcon style={{ color: 'white' }} /></LinkMaterial>\r\n\r\n            </Container>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default Footer","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPic(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"130pt\",\n    height: \"130pt\",\n    viewBox: \"0 0 130 130\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"surface1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(14.509804%,71.764706%,82.745098%)\",\n      fillOpacity: 1\n    },\n    d: \"M 130 65 C 130 100.898438 100.898438 130 65 130 C 29.101562 130 0 100.898438 0 65 C 0 29.101562 29.101562 0 65 0 C 100.898438 0 130 29.101562 130 65 Z M 130 65 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(98.431373%,78.431373%,78.431373%)\",\n      fillOpacity: 1\n    },\n    d: \"M 43.726562 93.363281 C 43.726562 93.363281 48.191406 81.085938 40.847656 72.796875 C 40.449219 72.347656 40.453125 71.664062 40.859375 71.21875 C 43.394531 68.449219 47.898438 68.507812 54.363281 80.363281 C 56.050781 83.457031 59.574219 83.292969 62.636719 81.546875 C 68.460938 78.222656 76.867188 67.628906 85.683594 70.210938 C 86.082031 70.328125 86.390625 70.648438 86.496094 71.050781 C 86.597656 71.457031 86.480469 71.882812 86.183594 72.179688 L 55.546875 102.816406 Z M 43.726562 93.363281 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(94.117647%,94.509804%,94.509804%)\",\n      fillOpacity: 1\n    },\n    d: \"M 102.816406 68.546875 C 102.816406 69.199219 102.289062 69.726562 101.636719 69.726562 L 28.363281 69.726562 C 27.710938 69.726562 27.183594 69.199219 27.183594 68.546875 L 27.183594 66.183594 C 27.183594 65.53125 27.710938 65 28.363281 65 L 101.636719 65 C 102.289062 65 102.816406 65.53125 102.816406 66.183594 Z M 102.816406 68.546875 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(100%,100%,100%)\",\n      fillOpacity: 1\n    },\n    d: \"M 65 31.910156 C 66.230469 31.910156 67.402344 31.964844 68.546875 32.046875 L 68.546875 28.363281 C 68.546875 27.710938 68.015625 27.183594 67.363281 27.183594 L 62.636719 27.183594 C 61.984375 27.183594 61.453125 27.710938 61.453125 28.363281 L 61.453125 32.046875 C 62.597656 31.964844 63.769531 31.910156 65 31.910156 Z M 65 31.910156 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(88.627451%,89.411765%,89.803922%)\",\n      fillOpacity: 1\n    },\n    d: \"M 31.910156 65 C 31.910156 65 30.726562 31.910156 65 31.910156 C 99.273438 31.910156 98.089844 65 98.089844 65 Z M 31.910156 65 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(24.313725%,24.313725%,24.705882%)\",\n      fillOpacity: 1\n    },\n    d: \"M 43.726562 93.363281 L 31.910156 102.816406 L 55.546875 102.816406 Z M 43.726562 93.363281 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(100%,100%,100%)\",\n      fillOpacity: 1\n    },\n    d: \"M 65 31.910156 C 30.726562 31.910156 31.910156 65 31.910156 65 L 65 65 Z M 65 31.910156 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(98.431373%,78.431373%,78.431373%)\",\n      fillOpacity: 1\n    },\n    d: \"M 43.726562 93.363281 C 43.726562 93.363281 48.191406 81.085938 40.847656 72.796875 C 40.449219 72.347656 40.453125 71.664062 40.859375 71.21875 C 43.394531 68.449219 47.898438 68.507812 54.363281 80.363281 C 56.050781 83.457031 59.574219 83.292969 62.636719 81.546875 C 68.460938 78.222656 76.867188 67.628906 85.683594 70.210938 C 86.082031 70.328125 86.390625 70.648438 86.496094 71.050781 C 86.597656 71.457031 86.480469 71.882812 86.183594 72.179688 L 55.546875 102.816406 Z M 43.726562 93.363281 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(96.862745%,70.588235%,70.588235%)\",\n      fillOpacity: 1\n    },\n    d: \"M 86.183594 72.179688 C 86.480469 71.882812 86.597656 71.457031 86.496094 71.050781 C 86.390625 70.644531 86.082031 70.328125 85.683594 70.210938 C 76.867188 67.628906 68.460938 78.222656 62.636719 81.546875 C 59.574219 83.292969 56.050781 83.457031 54.363281 80.363281 C 47.898438 68.507812 43.394531 68.449219 40.859375 71.21875 C 40.453125 71.664062 40.449219 72.347656 40.847656 72.796875 C 48.191406 81.082031 43.726562 93.363281 43.726562 93.363281 L 46.949219 95.941406 L 83.558594 74.808594 Z M 86.183594 72.179688 \"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPic);\nexport default __webpack_public_path__ + \"static/media/pic.99f5618c.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport LinkMaterial from '@material-ui/core/Link';\r\nimport { Link } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { ReactComponent as Logo } from '../img/pic.svg';\r\nconst About = () => {\r\n    return (\r\n        <Container className=\"container\">\r\n            <Grid container className=\"scrollbar \" id=\"style-2\" spacing={3} direction=\"column\" >\r\n                <Grid item align=\"center\" >\r\n                    <Logo />\r\n                </Grid>\r\n                <Grid item className=\"paragraphRecipe\">\r\n                    <div className=\"title\">Recipe Planner</div>\r\n                    <p><b>Recipe Planner</b> - is a web application written with the help of a JavaScript library for building user interfaces - React. </p>\r\n                    <p>With this web app, you can create recipes and perform calculations of each ingredient you need to buy to cook a meal (available in the Shopping section). </p>\r\n                    <p>The program allows to view and edit each recipe created as well as ingredients belonging to a certain recipe.</p>\r\n                    <p>Additionally, it is possible to load and automatically save created recipes on the server.</p>\r\n                    <p>The app uses a source-available cross-platform document-oriented database program MongoDB, a cloud platform as a service Heroku and is hosted on Netlify.</p>\r\n                    <p>The web application is one of the assignments for the EGUI course at <LinkMaterial  href=\"https://www.pw.edu.pl/engpw\">Warsaw University of Technology</LinkMaterial>.</p>\r\n                    <h1 className=\"title text-left\">Tools used</h1>\r\n                    <ul className=\"list\">\r\n                        <li>Microsoft Visual Studio Code Version 1.56.2</li>\r\n                        <li>Node.js Version 14.16.0</li>\r\n                        <li>React Version 17.0.2</li>\r\n                        <li>Material-UI Version 4.11.4</li>\r\n                        <li>MongoDB Version 4.4.5</li>\r\n                        <li>Heroku</li>\r\n                        <li>Netlify </li>\r\n                    </ul>\r\n                    <Link to='/'> Go Back</Link>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Footer from './Components/Structure/Footer';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport About from './Components/Structure/About'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode >\r\n    <Router>\r\n      <Route path='/' exact render={() => (\r\n        <App />\r\n      )} />\r\n      <Route path='/about' component={About} />\r\n      <Footer />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}