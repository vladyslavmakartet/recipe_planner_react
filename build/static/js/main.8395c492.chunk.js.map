{"version":3,"sources":["Components/Structure/WelcomeWindow/Item.jsx","Components/Structure/WelcomeWindow/CarouselMain.jsx","Components/Structure/WelcomeWindow/CreateButtonMain.jsx","Components/Structure/WelcomeWindow/LoadButtonMain.jsx","Components/Structure/MenuWindow/InputForms.jsx","Components/Structure/MenuWindow/WelcomeMessage.jsx","Components/Structure/MenuWindow/ShowRecipe.jsx","Components/Structure/MenuWindow/Shopping.jsx","Components/Structure/MenuWindow/Menu.jsx","App.js","Components/Structure/Footer.jsx","reportWebVitals.js","Components/img/pic.svg","Components/Structure/About.jsx","index.js"],"names":["Item","props","_jsxs","children","_jsx","src","concat","item","name","className","description","CarouselMain","Carousel","autoPlay","fullHeightHover","animation","interval","map","i","CreateButtonMain","_ref","onCreate","Tooltip","title","Button","style","textTransform","onClick","size","variant","LoadButtonMain","onLoad","CssTextField","withStyles","root","color","borderBottomColor","borderColor","TextField","InputForms","_jsxs2","onAdd","RecipeToBeEdited","_useState","useState","recipeName","_useState2","_slicedToArray","setRecipeName","_useState3","recipeDescription","_useState4","setRecipeDescription","_useState5","_toConsumableArray","IngredientListFiltered","_useState6","IngredientList","setIngredientList","onChangeIngredient","index","event","preventDefault","persist","prev","_objectSpread3","_objectSpread","_defineProperty","target","value","errors","length","_Fragment","onSubmit","e","alert","_id","id","Grid","container","label","placeholder","helperText","fullWidth","margin","required","onChange","multiline","rows","_jsx2","marginTop","alignItems","justify","direction","spacing","wrap","xs","align","ingredientName","InputLabelProps","shrink","type","inputProps","min","step","ingredientQuantity","ingredientUnit","IconButton","filter","handleRemoveIngredient","DeleteIcon","ButtonGroup","backgroundColor","inputState","someEmpty","some","allPrev","prevIsValid","form","WelcomeMessage","minHeight","Typography","component","ShowRecipe","recipeToShow","Shopping","RemoveRecipeFromShopping","RecipeForShopping","IngredientListForShopping","DeleteForeverOutlinedIcon","cursor","fontSize","ButtonDisabled","pointerEvents","MuiButton","ButtonWithTooltip","tooltipText","disabled","other","_objectWithoutProperties","_excluded","adjustedButtonProps","undefined","Menu","_ref2","loadFromServer","showAddRecipeForm","setShowAddRecipeForm","showRecipeData","setShowRecipeData","showEditRecipe","setShowEditRecipe","_useState7","_useState8","showShopping","setShowShopping","_useState9","_useState10","RecipeList","setRecipeList","_useState11","_useState12","RecipeToBeShown","setRecipeToBeShown","_useState13","_useState14","RecipeToEdit","setRecipeToEdit","_useState15","_useState16","indexForEditing","setIndexForEditing","_useState17","_useState18","addRecipeForShopping","setAddRecipeForShopping","_useState19","_useState20","setIngredientListForShopping","useEffect","load","_jsx3","_jsx4","_jsx5","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","getRecipes","_context2","next","_ref4","_callee","recipesFromServer","_context","fetchRecipes","sent","stop","apply","arguments","_ref5","_callee3","res","data","_context3","fetch","json","abrupt","addRecipe","_ref6","_callee4","Recipe","newArr","_res","_context4","method","headers","body","JSON","stringify","console","log","_x","handleRemoveRecipe","_ref7","_callee5","itemToDelete","_context5","_x2","_x3","_x4","handleShopping","newArr2","parse","reduce","a","c","same","find","v","parseFloat","push","oldArray","_loop2","x","indexValue","findIndex","Math","round","Number","EPSILON","splice","alignContent","endIcon","CloudDownloadOutlinedIcon","ShoppingCartOutlinedIcon","marginBottom","handleShowRecipe","AddOutlinedIcon","_loop","sort","b","handleAddRecipeForShopping","EditOutlinedIcon","handleEditRecipe","App","showCreateRecipe","setShowCreateRecipe","setLoadFromServer","Container","Footer","maxWidth","Link","to","Date","getFullYear","LinkMaterial","href","LinkedInIcon","GitHubIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","_extends","Object","assign","bind","source","key","prototype","hasOwnProperty","call","this","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPic","svgRef","titleId","xmlns","xmlnsXlink","width","height","viewBox","ref","stroke","fillRule","fill","fillOpacity","d","ForwardRef","About","Logo","ReactDOM","render","React","StrictMode","Router","Route","path","exact","document","getElementById"],"mappings":"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","file":"static/js/main.8395c492.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function Item(props) {\r\n\r\n    return (\r\n        <div>\r\n            <img src={`/img/${props.item.name}.jpg`} />\r\n            <div className=\"textContainer\">\r\n                <p className=\"textToShow\" >{props.item.description}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Carousel from 'react-material-ui-carousel';\r\nimport { Item } from './Item';\r\n\r\nexport const CarouselMain = () => {\r\n    var items = [\r\n        {\r\n            name: \"1\",\r\n            description: \"Create your recipes\"\r\n        },\r\n        {\r\n            name: \"2\",\r\n            description: \"Add ingredients\"\r\n        },\r\n        {\r\n            name: \"3\",\r\n            description: \"Make a shopping list\"\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <Carousel\r\n            autoPlay={true}\r\n            fullHeightHover={false}\r\n            animation=\"slide\"\r\n            interval=\"4000\"\r\n            \r\n        >\r\n            {\r\n                items.map((item, i) => <Item key={i} item={item} />)\r\n            }\r\n        </Carousel>\r\n    )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '@material-ui/core/Button'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nconst CreateButtonMain = ({ onCreate }) => {\r\n    return (\r\n\r\n        <Tooltip title=\"Create recipes. (Caution: you may overwrite already existing recipes on the server)\">\r\n        <Button style={{ textTransform: \"none\" }}onClick={onCreate}className=\" myBtn\"size=\"large\"variant=\"contained\"> \r\n            Creat\r\n        </Button>\r\n        </Tooltip>\r\n\r\n    )\r\n}\r\nCreateButtonMain.propTypes = {\r\n    onClick: PropTypes.func,\r\n}\r\nexport default CreateButtonMain\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '@material-ui/core/Button'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nconst LoadButtonMain = ({ onLoad }) => {\r\n\r\n    return (\r\n        <Tooltip title=\"Load last recipes from the server.\">\r\n            <Button style={{ textTransform: \"none\" }} onClick={onLoad}  className=\"tooltip myBtn\" size=\"large\" variant=\"contained\">Load\r\n            </Button>\r\n        </Tooltip>\r\n\r\n    )\r\n}\r\nLoadButtonMain.propTypes = {\r\n    onClick: PropTypes.func,\r\n}\r\nexport default LoadButtonMain\r\n","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useState } from 'react'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { fade, ThemeProvider, withStyles, makeStyles, createMuiTheme, } from '@material-ui/core/styles';\r\n\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: 'black',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'black',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: '#7e8ca7',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'black',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: '#969696',\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\n\r\n\r\n\r\nconst InputForms = ({ onAdd, RecipeToBeEdited }) => {\r\n\r\n    const [recipeName, setRecipeName] = useState(RecipeToBeEdited ? RecipeToBeEdited.recipeName : '')\r\n    const [recipeDescription, setRecipeDescription] = useState(RecipeToBeEdited ? RecipeToBeEdited.recipeDescription : '')\r\n    const [IngredientList, setIngredientList] = useState(RecipeToBeEdited ? [...RecipeToBeEdited?.IngredientListFiltered] : [])\r\n\r\n    const prevIsValid = () => {\r\n        if (IngredientList.length === 0) {\r\n            return true;\r\n        }\r\n\r\n        const someEmpty = IngredientList.some(\r\n            (item) => item.ingredientName === '' || item.ingredientUnit === '' || item.ingredientQuantity === '');\r\n\r\n\r\n        if (someEmpty) {\r\n            IngredientList.map((item, index) => {\r\n                const allPrev = [...IngredientList];\r\n\r\n                if (IngredientList[index].ingredientName === \"\") {\r\n                    allPrev[index].errors.ingredientName = \"Ingredient's name is required\";\r\n                }\r\n\r\n                if (IngredientList[index].ingredientQuantity === \"\") {\r\n                    allPrev[index].errors.ingredientQuantity = \"Ingredient's quantity is required\";\r\n                }\r\n\r\n                if (IngredientList[index].ingredientUnit === \"\") {\r\n                    allPrev[index].errors.ingredientUnit = \"Ingredient's unit is required\";\r\n                }\r\n\r\n                setIngredientList(allPrev);\r\n            })\r\n        }\r\n        return !someEmpty;\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!recipeName || !recipeDescription || (IngredientList.length <= 0)) {\r\n            alert('Please fill all the inputs and add ingredients')\r\n            return\r\n        }\r\n        let IngredientListFiltered = IngredientList.map(function (item) {\r\n            delete item.errors;\r\n            return item\r\n        });\r\n        if (!RecipeToBeEdited) {\r\n            //const _id = Math.floor(Math.random() * 10000) + 1\r\n            onAdd({ recipeName, recipeDescription, IngredientListFiltered })\r\n        }\r\n        else {\r\n            const _id = RecipeToBeEdited._id\r\n            onAdd({ _id, recipeName, recipeDescription, IngredientListFiltered })\r\n        }\r\n        RecipeToBeEdited ? alert('The recipe has been modified!') : alert('The recipe has been added!')\r\n    }\r\n\r\n    const handleAddIngredient = (e) => {\r\n        e.preventDefault();\r\n        const inputState = {\r\n            ingredientName: \"\",\r\n            ingredientQuantity: \"\",\r\n            ingredientUnit: \"\",\r\n\r\n            errors: {\r\n                ingredientName: null,\r\n                ingredientQuantity: null,\r\n                ingredientUnit: null,\r\n            }\r\n        };\r\n        if (prevIsValid()) {\r\n            setIngredientList((prev) => [...prev, inputState]);\r\n        }\r\n    }\r\n    const onChangeIngredient = (index, event) => {\r\n        event.preventDefault();\r\n        event.persist();\r\n\r\n        setIngredientList(prev => {\r\n            return prev.map((item, i) => {\r\n                if (i !== index) {\r\n                    return item;\r\n                }\r\n                return {\r\n                    ...item,\r\n                    [event.target.name]: event.target.value,\r\n\r\n                    errors: {\r\n\r\n                        ...item.errors,\r\n                        [event.target.name]:\r\n                            event.target.value.length > 0\r\n                                ? null : [event.target.name] + \"Is required\",\r\n                    },\r\n                };\r\n            });\r\n        });\r\n    };\r\n    const handleRemoveIngredient = (e, index) => {\r\n        e.preventDefault();\r\n        setIngredientList((prev) => prev.filter((item) => item !== prev[index]));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} id=\"Recipe\" className=\"WordWrap\">\r\n                <Grid container className=\"scrollbar \" id=\"style-4\" >\r\n                    <CssTextField\r\n                        id=\"outlined-full-width\"\r\n                        label=\"Name\"\r\n                        placeholder=\"e.g Kebab\"\r\n                        helperText=\"Enter recipe's name\"\r\n                        fullWidth={true}\r\n                        margin=\"normal\"\r\n                        className=\"paragraph\"\r\n                        required\r\n                        value={recipeName}\r\n                        onChange={(e) => setRecipeName(e.target.value)}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <CssTextField\r\n                        id=\"outlined-multiline-static\"\r\n                        label=\"Description\"\r\n                        multiline\r\n                        className=\"paragraph\"\r\n                        rows={4}\r\n                        placeholder=\"e.g Some ingredients\"\r\n                        variant=\"outlined\"\r\n                        helperText=\"Enter recipe's description\"\r\n                        fullWidth={true}\r\n                        value={recipeDescription}\r\n                        onChange={(e) => setRecipeDescription(e.target.value)}\r\n                        required\r\n                    />\r\n                </Grid >\r\n\r\n                {/* {JSON.stringify(IngredientList)} */}\r\n\r\n\r\n                <div id=\"Ingredient\">\r\n                    {\r\n                        IngredientList.map((item, index) => (\r\n                            <Grid key={`item-${index}`} container style={{ marginTop: \"20px\" }} alignItems=\"center\" className=\"paragraph\" justify=\"center\" direction=\"row\" spacing={5} wrap=\"wrap\">\r\n                                <Grid item xs={1} align=\"center\" >\r\n                                    #{index + 1}\r\n\r\n\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <CssTextField\r\n                                        required\r\n                                        label=\"Name\"\r\n                                        placeholder=\"e.g Meat\"\r\n                                        className=\"paragraph\"\r\n                                        variant=\"outlined\"\r\n                                        name=\"ingredientName\"\r\n                                        //error={item.errors.ingredientName ? true : false}\r\n\r\n                                        value={item.ingredientName}\r\n                                        onChange={(e) => onChangeIngredient(index, e)}\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs >\r\n                                    <CssTextField\r\n                                        label=\"Quantity\"\r\n                                        type=\"number\"\r\n                                        placeholder=\"e.g 10\"\r\n                                        className=\"paragraph\"\r\n                                        variant=\"outlined\"\r\n                                        inputProps={{ min: \"0.01\", step: \"0.01\" }}\r\n                                        //error={item.errors.ingredientQuantity ? true : false}\r\n\r\n                                        required\r\n                                        name=\"ingredientQuantity\"\r\n                                        // className={\r\n                                        //     item.errors.ingredientQuantity\r\n                                        // }\r\n                                        value={item.ingredientQuantity}\r\n                                        className=\"paragraph\"\r\n                                        onChange={(e) => onChangeIngredient(index, e)}\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs >\r\n                                    <CssTextField\r\n                                        required\r\n                                        label=\"Unit\"\r\n                                        placeholder=\"e.g Kg\"\r\n                                        variant=\"outlined\"\r\n                                        name=\"ingredientUnit\"\r\n                                        className=\"paragraph\"\r\n\r\n                                        //error={item.errors.ingredientUnit ? true : false}\r\n\r\n                                        // className={\r\n                                        //     item.errors.ingredientUnit\r\n                                        // }\r\n                                        value={item.ingredientUnit}\r\n                                        onChange={(e) => onChangeIngredient(index, e)}\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item >\r\n                                    <IconButton aria-label=\"delete\" color=\"secondary\" onClick={(e) => handleRemoveIngredient(e, index)}>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        ))\r\n                    }\r\n\r\n                </div>\r\n\r\n                <ButtonGroup style={{ backgroundColor: \"#969696\" }} aria-label=\"outlined primary button group\" fullWidth={true} style={{ marginTop: \"10px\" }}>\r\n                    <Button onClick={handleAddIngredient} type=\"submit\" form=\"Ingredient\" size=\"large\" variant=\"contained\" fullWidth={true} style={{ textTransform: \"none\" }}>Add ingredient</Button>\r\n                    <Button type=\"submit\" form=\"Recipe\" size=\"large\" variant=\"contained\" fullWidth={true} style={{ textTransform: \"none\" }}>Save recipe</Button>\r\n                </ButtonGroup>\r\n\r\n\r\n            </form >\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputForms","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nconst WelcomeMessage = () => {\r\n    return (\r\n        <Grid container spacing={0}\r\n            className=\"threeD paragraph\"\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            style={{ minHeight: '40vh' }}>\r\n            <Grid item xs={12} className=\"WordWrap\">\r\n                <Typography variant=\"h1\" component=\"h2\" align=\"center\">\r\n                    Welcome!\r\n            </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} className=\"WordWrap\">\r\n                <Typography variant=\"subtitle1\" component=\"h2\" align=\"center\">\r\n                    Please select any available recipe or press any button\r\n            </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default WelcomeMessage","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nfunction ShowRecipe({ recipeToShow }) {\r\n    // console.log(JSON.stringify(recipeToShow))\r\n    return (\r\n        <>\r\n            <Grid container className=\"scrollbar \" id=\"style-4\" spacing={3} direction=\"column\">\r\n                <Grid item className=\"header\">\r\n                    {recipeToShow.recipeName}\r\n                </Grid>\r\n                <Grid item className=\"paragraphRecipe\">\r\n                    {recipeToShow.recipeDescription}\r\n                </Grid>\r\n                <Grid item className=\"paragraphRecipe\">\r\n                    You will need:\r\n                </Grid>\r\n                <Grid item >\r\n                    {recipeToShow.IngredientListFiltered.map((item, index) => (\r\n                        <Grid key={`item-${index}`} item className=\"paragraphRecipe\">\r\n                            {(index + 1) +\") \" + item.ingredientName + \" \" + item.ingredientQuantity + \" \" + item.ingredientUnit}\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShowRecipe\r\n","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\r\nconst Shopping = ({ RemoveRecipeFromShopping, RecipeForShopping, IngredientListForShopping }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Grid container>\r\n                <Grid container spacing={2}>\r\n                    {\r\n                        RecipeForShopping &&\r\n                        RecipeForShopping.map((item, index) => (\r\n                            <Grid key={`item-${index}`} item xs={3} >\r\n                                <div className=\"RecipeNameShopping\">\r\n                                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                                        <Grid item xs={10} className=\"truncate\">\r\n                                            {item.recipeName}\r\n                                        </Grid>\r\n                                        <Grid item xs={2} >\r\n                                            <DeleteForeverOutlinedIcon\r\n                                                className=\"ActionButtonShopping\"\r\n                                                color=\"secondary\"\r\n                                                align=\"center\" justify=\"center\"\r\n                                                style={{ cursor: 'pointer', fontSize: 17 }}\r\n\r\n                                                onClick={() => RemoveRecipeFromShopping(index)}\r\n\r\n                                            />\r\n\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n\r\n                            </Grid>\r\n                        ))\r\n                    }\r\n\r\n                    {IngredientListForShopping &&\r\n                        <Grid container style={{ marginTop: \"10px\" }}>\r\n                            <Grid item >\r\n                                <Grid item className=\"paragraphRecipe\">\r\n                                {IngredientListForShopping.length > 0 && \"You will need:\"}\r\n                    </Grid>\r\n                                {IngredientListForShopping.map((item, index) => (\r\n                                    <Grid key={`item-${index}`} item className=\"paragraphRecipe\">\r\n                                        {(index + 1) + \") \" + item.ingredientName + \" \" + item.ingredientQuantity + \" \" + item.ingredientUnit}\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                        </Grid>\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Shopping\r\n","import React, { useState, useEffect } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\r\nimport InputForms from './InputForms'\r\nimport WelcomeMessage from './WelcomeMessage'\r\nimport ShowRecipe from './ShowRecipe'\r\nimport Shopping from './Shopping'\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\r\nimport CloudUploadOutlinedIcon from '@material-ui/icons/CloudUploadOutlined';\r\nimport CloudDownloadOutlinedIcon from '@material-ui/icons/CloudDownloadOutlined';\r\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\r\nimport MuiButton from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n\r\nconst ButtonDisabled = withStyles({\r\n    root: {\r\n        \"&.Mui-disabled\": {\r\n            pointerEvents: \"auto\"\r\n        }\r\n    }\r\n})(MuiButton);\r\nconst ButtonWithTooltip = ({ tooltipText, disabled, onClick, ...other }) => {\r\n    const adjustedButtonProps = {\r\n        disabled: disabled,\r\n        component: disabled ? \"div\" : undefined,\r\n        onClick: disabled ? undefined : onClick\r\n    };\r\n    return (\r\n        <Tooltip title={tooltipText}>\r\n            <ButtonDisabled {...other} {...adjustedButtonProps} />\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\n\r\nconst Menu = ({ loadFromServer }) => {\r\n    const [showAddRecipeForm, setShowAddRecipeForm] = useState(false)\r\n    const [showRecipeData, setShowRecipeData] = useState(false)\r\n    const [showEditRecipe, setShowEditRecipe] = useState(false)\r\n    const [showShopping, setShowShopping] = useState(false)\r\n    const [RecipeList, setRecipeList] = useState([])\r\n    const [RecipeToBeShown, setRecipeToBeShown] = useState()\r\n    const [RecipeToEdit, setRecipeToEdit] = useState()\r\n    const [indexForEditing, setIndexForEditing] = useState()\r\n    const [addRecipeForShopping, setAddRecipeForShopping] = useState([])\r\n    const [IngredientListForShopping, setIngredientListForShopping] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (loadFromServer) {\r\n            load()\r\n        }\r\n    }, [])\r\n    const load = async () => {\r\n        const getRecipes = async () => {\r\n            const recipesFromServer = await fetchRecipes()\r\n            if (recipesFromServer.length <= 0) {\r\n                alert('No available recipes found on the server! Create a new one.')\r\n            }\r\n            setRecipeList(recipesFromServer)\r\n        }\r\n        getRecipes()\r\n    }\r\n    // Fetch Recipes\r\n    const fetchRecipes = async () => {\r\n        const res = await fetch('https://recipe-planner-pw.cyclic.cloud/RecipeList')\r\n        const data = await res.json()\r\n        return data\r\n    }\r\n\r\n    const addRecipe = async (Recipe) => {\r\n\r\n        if (showEditRecipe && (typeof indexForEditing !== 'undefined' && indexForEditing !== null)) {\r\n            let newArr = [...RecipeList]\r\n            newArr[indexForEditing] = Recipe\r\n            const res = await fetch('https://recipe-planner-pw.cyclic.cloud/RecipeList/' + Recipe._id, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify(newArr[indexForEditing])\r\n            })\r\n            const data = await res.json()\r\n            load()\r\n        }\r\n        else {\r\n            console.log(\"Hello kurwa\")\r\n            const res = await fetch('https://recipe-planner-pw.cyclic.cloud/add-recipe', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify(Recipe)\r\n            })\r\n            const data = await res.json()\r\n            load()\r\n        }\r\n\r\n        setShowAddRecipeForm(false)\r\n        setShowRecipeData(false)\r\n        setShowEditRecipe(false)\r\n    }\r\n    const handleRemoveRecipe = async (e, itemToDelete, index) => {\r\n\r\n        e.preventDefault();\r\n        await fetch(`https://recipe-planner-pw.cyclic.cloud/RecipeList/${itemToDelete._id}`, {\r\n            method: 'DELETE',\r\n        })\r\n        setRecipeList((prev) => prev.filter((item) => item !== prev[index]));\r\n        setShowRecipeData(false)\r\n        setShowAddRecipeForm(false)\r\n        setShowEditRecipe(false)\r\n    }\r\n\r\n    const handleShowRecipe = (e, item) => {\r\n        e.preventDefault();\r\n        setShowRecipeData(!showRecipeData)\r\n        setShowAddRecipeForm(false)\r\n        setShowEditRecipe(false)\r\n        setRecipeToBeShown(item)\r\n    }\r\n    const handleEditRecipe = (e, item, index) => {\r\n        e.preventDefault();\r\n        setShowEditRecipe(true)\r\n        setShowAddRecipeForm(true)\r\n        setShowRecipeData(false)\r\n        setRecipeToEdit(item)\r\n        setIndexForEditing(index)\r\n    }\r\n    const handleShopping = (e) => {\r\n        e.preventDefault();\r\n        setShowShopping(!showShopping)\r\n        setShowAddRecipeForm(false)\r\n        setShowRecipeData(false)\r\n        setShowEditRecipe(false)\r\n        setAddRecipeForShopping()\r\n        setIngredientListForShopping()\r\n    }\r\n    const handleAddRecipeForShopping = (e, item, index) => {\r\n        e.preventDefault();\r\n        addRecipeForShopping ? setAddRecipeForShopping((prev) => [...prev, item]) : setAddRecipeForShopping([item]);\r\n        let newArr = JSON.parse(JSON.stringify(item.IngredientListFiltered));\r\n        // get rid of duplicates\r\n        newArr = newArr.reduce((a, c) => {\r\n            var same = a.find(v => v.ingredientName == c.ingredientName && v.ingredientUnit == c.ingredientUnit);\r\n            if (same) {\r\n                same.ingredientQuantity = parseFloat(same.ingredientQuantity) + parseFloat(c.ingredientQuantity);\r\n            } else {\r\n                a.push(c);\r\n            }\r\n            return a;\r\n        }, []);\r\n        if (!IngredientListForShopping || IngredientListForShopping.length === 0) {\r\n            newArr.sort((a, b) => (a.ingredientName > b.ingredientName) ? 1 : -1)\r\n            setIngredientListForShopping(newArr)\r\n        }\r\n        else {\r\n            let oldArray = JSON.parse(JSON.stringify(IngredientListForShopping));\r\n            for (let i = 0; i < newArr.length; i++) {\r\n                if (oldArray.some(x => x.ingredientName === newArr[i].ingredientName && x.ingredientUnit === newArr[i].ingredientUnit)) {\r\n                    const indexValue = oldArray.findIndex(x => x.ingredientName === newArr[i].ingredientName && x.ingredientUnit === newArr[i].ingredientUnit)\r\n                    if (indexValue !== (-1)) {\r\n                        oldArray[indexValue].ingredientQuantity = Math.round(((parseFloat(oldArray[indexValue].ingredientQuantity) + parseFloat(newArr[i].ingredientQuantity)) + Number.EPSILON) * 100) / 100;\r\n                    }\r\n                }\r\n                else {\r\n                    oldArray.push(newArr[i])\r\n                }\r\n            }\r\n            oldArray.sort((a, b) => (a.ingredientName > b.ingredientName) ? 1 : -1)\r\n            setIngredientListForShopping(oldArray)\r\n        }\r\n    }\r\n    const RemoveRecipeFromShopping = (index) => {\r\n        const newArr2 = [...addRecipeForShopping]\r\n        // get rid of duplicates\r\n        let newArr = JSON.parse(JSON.stringify(addRecipeForShopping[index].IngredientListFiltered));\r\n        newArr = newArr.reduce((a, c) => {\r\n            var same = a.find(v => v.ingredientName == c.ingredientName && v.ingredientUnit == c.ingredientUnit);\r\n            if (same) {\r\n                same.ingredientQuantity = parseFloat(same.ingredientQuantity) + parseFloat(c.ingredientQuantity);\r\n            } else {\r\n                a.push(c);\r\n            }\r\n            return a;\r\n        }, []);\r\n\r\n        if (IngredientListForShopping && IngredientListForShopping.length !== 0) {\r\n            let oldArray = JSON.parse(JSON.stringify(IngredientListForShopping));\r\n            for (let i = 0; i < newArr.length; i++) {\r\n                if (oldArray.some(x => x.ingredientName === newArr[i].ingredientName && x.ingredientUnit === newArr[i].ingredientUnit)) {\r\n                    const indexValue = oldArray.findIndex(x => x.ingredientName === newArr[i].ingredientName && x.ingredientUnit === newArr[i].ingredientUnit)\r\n                    if (indexValue !== (-1)) {\r\n                        oldArray[indexValue].ingredientQuantity = Math.round(((parseFloat(oldArray[indexValue].ingredientQuantity) - parseFloat(newArr[i].ingredientQuantity)) + Number.EPSILON) * 100) / 100;\r\n                        if (oldArray[indexValue].ingredientQuantity <= 0)\r\n                            oldArray.splice(indexValue, 1)\r\n                    }\r\n                }\r\n            }\r\n\r\n            setIngredientListForShopping(oldArray)\r\n        }\r\n        newArr2.splice(index, 1)\r\n        setAddRecipeForShopping(newArr2);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container alignContent=\"center\" justify=\"center\" className=\"MenuHeaderButtonsMarginBot\">\r\n\r\n\r\n                {!showShopping\r\n                    ? [\r\n                        RecipeList.length > 0\r\n                            ? [\r\n                                <ButtonGroup size=\"large\" aria-label=\"small button group\" variant=\"contained\" fullWidth={true} style={{ backgroundColor: \"#969696\" }}>\r\n                                    <Button style={{ textTransform: \"none\" }} onClick={load} endIcon={<CloudDownloadOutlinedIcon />}>Load</Button>\r\n                                    <Button style={{ textTransform: \"none\" }} endIcon={<ShoppingCartOutlinedIcon />} onClick={(e) => { handleShopping(e) }}>Shopping </Button>\r\n                                </ButtonGroup>\r\n                            ]\r\n                            : [\r\n                                <ButtonGroup size=\"large\" aria-label=\"small button group\" variant=\"contained\" fullWidth={true} style={{ backgroundColor: \"#969696\" }}>\r\n\r\n                                    <Button style={{ textTransform: \"none\" }} onClick={load} endIcon={<CloudDownloadOutlinedIcon />}>Load</Button>\r\n                                    <ButtonWithTooltip tooltipText=\"Add some recipes before shopping\" style={{ textTransform: \"none\" }} endIcon={<ShoppingCartOutlinedIcon />} disabled>\r\n                                        {\"Shopping\"}\r\n                                    </ButtonWithTooltip>\r\n                                </ButtonGroup>\r\n\r\n\r\n                            ]\r\n                    ]\r\n                    :\r\n                    <ButtonGroup size=\"large\" aria-label=\"small button group\" variant=\"contained\" fullWidth={true} style={{ backgroundColor: \"#969696\" }}>\r\n                        <ButtonWithTooltip tooltipText=\"Close the shopping list before loading\" style={{ textTransform: \"none\" }} endIcon={<CloudDownloadOutlinedIcon />} disabled>{\"Load\"}</ButtonWithTooltip>\r\n                        {RecipeList.length > 0\r\n                            ? <Button style={{ textTransform: \"none\" }} endIcon={<ShoppingCartOutlinedIcon />} onClick={(e) => { handleShopping(e) }}>Shopping </Button>\r\n                            : <ButtonWithTooltip tooltipText=\"Add some recipes before shopping\" style={{ textTransform: \"none\" }} endIcon={<ShoppingCartOutlinedIcon />} disabled>\r\n                                {\"Shopping\"}\r\n                            </ButtonWithTooltip>}\r\n                    </ButtonGroup>\r\n                }\r\n            </Grid>\r\n            <Grid container >\r\n                <Grid item xs={4} >\r\n                    <Grid item className=\"left scrollbar containerMenu\" style={{ marginTop: \"10px\", marginBottom: \"10px\" }} id=\"style-4\" >\r\n                        {(RecipeList.length === 0) ?\r\n                            <Grid container\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n\r\n                                style={{ minHeight: '50vh' }}>\r\n                                <Grid item xs={12} className=\"WordWrap paragraph\" >\r\n                                    <h4>Currently nothing is here!</h4>\r\n                                </Grid>\r\n                            </Grid>\r\n                            : RecipeList.map((item, index) => (\r\n                                <Grid key={`item-${index}`} container>\r\n                                    <Grid container className=\"RecipeName\" alignItems=\"center\">\r\n                                        <Grid item xs={10} className=\"WordWrap paragraph\" >\r\n                                            <h3 onClick={(e) => showShopping ? \"\" : handleShowRecipe(e, item)}>\r\n                                                {item.recipeName}</h3>\r\n                                        </Grid>\r\n                                        {showShopping ?\r\n                                            <>\r\n                                                <Grid item xs={2} align=\"center\" >\r\n                                                    <AddOutlinedIcon\r\n                                                        className=\"ActionButton\"\r\n                                                        style={{ cursor: 'pointer' }}\r\n                                                        onClick={(e) => { handleAddRecipeForShopping(e, item, index) }}\r\n                                                    />\r\n                                                </Grid>\r\n\r\n                                            </>\r\n                                            : <>\r\n                                                <Grid item xs={1}>\r\n                                                    <EditOutlinedIcon\r\n                                                        className=\"ActionButton\"\r\n                                                        style={{ cursor: 'pointer' }}\r\n                                                        onClick={(e) => { handleEditRecipe(e, item, index) }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={1}>\r\n                                                    <DeleteForeverOutlinedIcon\r\n                                                        className=\"ActionButton\"\r\n                                                        color=\"secondary\"\r\n                                                        style={{ cursor: 'pointer' }}\r\n                                                        onClick={(e) => handleRemoveRecipe(e, item, index)}\r\n\r\n                                                    />\r\n\r\n                                                </Grid>\r\n                                            </>\r\n                                        }\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            ))}\r\n                    </Grid>\r\n                    {(() => {\r\n                        if (showAddRecipeForm)\r\n                            return <Button onClick={() => (\r\n                                setShowAddRecipeForm(!showAddRecipeForm),\r\n                                setShowEditRecipe(false),\r\n                                setShowRecipeData(false))}\r\n                                size=\"large\"\r\n                                variant=\"contained\"\r\n                                style={{ backgroundColor: \"#969696\" }}\r\n                                fullWidth={true}\r\n                                style={{ textTransform: \"none\" }}\r\n                            >\r\n                                Cancel\r\n                                </Button>\r\n                        else if (showRecipeData || showEditRecipe)\r\n                            return <Button onClick={() => (\r\n                                setShowAddRecipeForm(false),\r\n                                setShowEditRecipe(false),\r\n                                setShowRecipeData(false)\r\n                            )}\r\n                                size=\"large\"\r\n                                variant=\"contained\"\r\n                                style={{ backgroundColor: \"#969696\" }}\r\n                                fullWidth={true}\r\n                                style={{ textTransform: \"none\" }}\r\n                            >\r\n                                Cancel\r\n                                </Button>\r\n                        else if (showShopping)\r\n                            return <Button onClick={() => (\r\n                                setShowAddRecipeForm(false),\r\n                                setShowEditRecipe(false),\r\n                                setShowRecipeData(false),\r\n                                setShowShopping(false)\r\n                            )}\r\n                                size=\"large\"\r\n                                variant=\"contained\"\r\n                                style={{ backgroundColor: \"#969696\" }}\r\n                                fullWidth={true}\r\n                                style={{ textTransform: \"none\" }}\r\n                            >\r\n                                Close the shopping list\r\n                                </Button>\r\n\r\n                        else if (!showAddRecipeForm)\r\n                            return <Button onClick={() => (\r\n                                setShowAddRecipeForm(!showAddRecipeForm),\r\n                                setShowEditRecipe(false),\r\n                                setShowRecipeData(false))}\r\n                                size=\"large\"\r\n                                variant=\"contained\"\r\n                                style={{ backgroundColor: \"#969696\" }}\r\n                                fullWidth={true}\r\n                                style={{ textTransform: \"none\" }}\r\n                            >\r\n                                Add Recipe\r\n                                    </Button>\r\n\r\n                    })()}\r\n\r\n                </Grid>\r\n                <Grid item xs={8} className=\"right scrollbar containerMenu WordWrap\" id=\"style-4\">\r\n                    {(() => {\r\n                        if (!showRecipeData && !showAddRecipeForm && !showEditRecipe && !showShopping)\r\n                            return <WelcomeMessage />;\r\n                        else if (showAddRecipeForm) {\r\n                            if (!showEditRecipe)\r\n                                return <InputForms onAdd={addRecipe} />;\r\n                            else if (showEditRecipe)\r\n                                return <InputForms onAdd={addRecipe} RecipeToBeEdited={RecipeToEdit} />\r\n                            else if (showAddRecipeForm && showEditRecipe)\r\n                                return setShowEditRecipe(false)\r\n                        }\r\n                        else if (showRecipeData && !showEditRecipe)\r\n                            return <ShowRecipe recipeToShow={RecipeToBeShown} />;\r\n                        else if (showShopping)\r\n                            return <Shopping RemoveRecipeFromShopping={RemoveRecipeFromShopping} RecipeForShopping={addRecipeForShopping} IngredientListForShopping={IngredientListForShopping} />\r\n\r\n                    })()}\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Menu\r\n","import Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { CarouselMain } from './Components/Structure/WelcomeWindow/CarouselMain.jsx';\r\nimport CreateButtonMain from './Components/Structure/WelcomeWindow/CreateButtonMain';\r\nimport LoadButtonMain from './Components/Structure/WelcomeWindow/LoadButtonMain';\r\nimport { useState } from 'react'\r\nimport Menu from './Components/Structure/MenuWindow/Menu'\r\n\r\nfunction App() {\r\n  const [showCreateRecipe, setShowCreateRecipe] = useState(true)\r\n  const [loadFromServer, setLoadFromServer] = useState(false)\r\n  return (\r\n    <div className=\"App\" >\r\n      <Container className=\"container\">\r\n        {showCreateRecipe && <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\r\n          <Grid item >\r\n            <CarouselMain />\r\n          </Grid>\r\n          <Grid item >\r\n            <div className=\"btn\">\r\n              <CreateButtonMain onCreate={() => setShowCreateRecipe(!showCreateRecipe)} />\r\n              <LoadButtonMain onLoad={() => {return setShowCreateRecipe(!showCreateRecipe), setLoadFromServer(!loadFromServer)}}/>\r\n            </div>\r\n          </Grid>\r\n        </Grid>}\r\n        {showCreateRecipe ? <></> : <Menu loadFromServer={loadFromServer}/> }\r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LinkMaterial from '@material-ui/core/Link';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        \r\n            <Container maxWidth={false} className=\"footer\" >\r\n                <Link to='/about' style={{ color: 'white' }}>About</Link>\r\n                <div className=\"text\">&copy; {new Date().getFullYear()} Vladyslav Makartet</div>\r\n\r\n                <LinkMaterial href=\"https://www.linkedin.com/in/vladyslavmakartet/\"><LinkedInIcon style={{ color: 'white' }} /></LinkMaterial>\r\n                <LinkMaterial href=\"https://github.com/vladyslavmakartet\"><GitHubIcon style={{ color: 'white' }} /></LinkMaterial>\r\n\r\n            </Container>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default Footer","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","var _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPic(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"130pt\",\n    height: \"130pt\",\n    viewBox: \"0 0 130 130\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"surface1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(14.509804%,71.764706%,82.745098%)\",\n      fillOpacity: 1\n    },\n    d: \"M 130 65 C 130 100.898438 100.898438 130 65 130 C 29.101562 130 0 100.898438 0 65 C 0 29.101562 29.101562 0 65 0 C 100.898438 0 130 29.101562 130 65 Z M 130 65 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(98.431373%,78.431373%,78.431373%)\",\n      fillOpacity: 1\n    },\n    d: \"M 43.726562 93.363281 C 43.726562 93.363281 48.191406 81.085938 40.847656 72.796875 C 40.449219 72.347656 40.453125 71.664062 40.859375 71.21875 C 43.394531 68.449219 47.898438 68.507812 54.363281 80.363281 C 56.050781 83.457031 59.574219 83.292969 62.636719 81.546875 C 68.460938 78.222656 76.867188 67.628906 85.683594 70.210938 C 86.082031 70.328125 86.390625 70.648438 86.496094 71.050781 C 86.597656 71.457031 86.480469 71.882812 86.183594 72.179688 L 55.546875 102.816406 Z M 43.726562 93.363281 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(94.117647%,94.509804%,94.509804%)\",\n      fillOpacity: 1\n    },\n    d: \"M 102.816406 68.546875 C 102.816406 69.199219 102.289062 69.726562 101.636719 69.726562 L 28.363281 69.726562 C 27.710938 69.726562 27.183594 69.199219 27.183594 68.546875 L 27.183594 66.183594 C 27.183594 65.53125 27.710938 65 28.363281 65 L 101.636719 65 C 102.289062 65 102.816406 65.53125 102.816406 66.183594 Z M 102.816406 68.546875 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(100%,100%,100%)\",\n      fillOpacity: 1\n    },\n    d: \"M 65 31.910156 C 66.230469 31.910156 67.402344 31.964844 68.546875 32.046875 L 68.546875 28.363281 C 68.546875 27.710938 68.015625 27.183594 67.363281 27.183594 L 62.636719 27.183594 C 61.984375 27.183594 61.453125 27.710938 61.453125 28.363281 L 61.453125 32.046875 C 62.597656 31.964844 63.769531 31.910156 65 31.910156 Z M 65 31.910156 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(88.627451%,89.411765%,89.803922%)\",\n      fillOpacity: 1\n    },\n    d: \"M 31.910156 65 C 31.910156 65 30.726562 31.910156 65 31.910156 C 99.273438 31.910156 98.089844 65 98.089844 65 Z M 31.910156 65 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(24.313725%,24.313725%,24.705882%)\",\n      fillOpacity: 1\n    },\n    d: \"M 43.726562 93.363281 L 31.910156 102.816406 L 55.546875 102.816406 Z M 43.726562 93.363281 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(100%,100%,100%)\",\n      fillOpacity: 1\n    },\n    d: \"M 65 31.910156 C 30.726562 31.910156 31.910156 65 31.910156 65 L 65 65 Z M 65 31.910156 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(98.431373%,78.431373%,78.431373%)\",\n      fillOpacity: 1\n    },\n    d: \"M 43.726562 93.363281 C 43.726562 93.363281 48.191406 81.085938 40.847656 72.796875 C 40.449219 72.347656 40.453125 71.664062 40.859375 71.21875 C 43.394531 68.449219 47.898438 68.507812 54.363281 80.363281 C 56.050781 83.457031 59.574219 83.292969 62.636719 81.546875 C 68.460938 78.222656 76.867188 67.628906 85.683594 70.210938 C 86.082031 70.328125 86.390625 70.648438 86.496094 71.050781 C 86.597656 71.457031 86.480469 71.882812 86.183594 72.179688 L 55.546875 102.816406 Z M 43.726562 93.363281 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(96.862745%,70.588235%,70.588235%)\",\n      fillOpacity: 1\n    },\n    d: \"M 86.183594 72.179688 C 86.480469 71.882812 86.597656 71.457031 86.496094 71.050781 C 86.390625 70.644531 86.082031 70.328125 85.683594 70.210938 C 76.867188 67.628906 68.460938 78.222656 62.636719 81.546875 C 59.574219 83.292969 56.050781 83.457031 54.363281 80.363281 C 47.898438 68.507812 43.394531 68.449219 40.859375 71.21875 C 40.453125 71.664062 40.449219 72.347656 40.847656 72.796875 C 48.191406 81.082031 43.726562 93.363281 43.726562 93.363281 L 46.949219 95.941406 L 83.558594 74.808594 Z M 86.183594 72.179688 \"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPic);\nexport default __webpack_public_path__ + \"static/media/pic.99f5618c.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport LinkMaterial from '@material-ui/core/Link';\r\nimport { Link } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { ReactComponent as Logo } from '../img/pic.svg';\r\nconst About = () => {\r\n    return (\r\n        <Container className=\"container\">\r\n            <Grid container className=\"scrollbar \" id=\"style-2\" spacing={3} direction=\"column\" >\r\n                <Grid item align=\"center\" >\r\n                    <Logo />\r\n                </Grid>\r\n                <Grid item className=\"paragraphRecipe\">\r\n                    <div className=\"title\">Recipe Planner</div>\r\n                    <p><b>Recipe Planner</b> - is a web application written with the help of a JavaScript library for building user interfaces - React. </p>\r\n                    <p>With this web app, you can create recipes and perform calculations of each ingredient you need to buy to cook a meal (available in the Shopping section). </p>\r\n                    <p>The program allows to view and edit each recipe created as well as ingredients belonging to a certain recipe.</p>\r\n                    <p>Additionally, it is possible to load and automatically save created recipes on the server.</p>\r\n                    <p>The app uses a source-available cross-platform document-oriented database program MongoDB, a cloud platform as a service <s>Heroku</s> Cyclic and is hosted on Netlify.</p>\r\n                    <p>The web application is one of the assignments for the EGUI course at <LinkMaterial  href=\"https://www.pw.edu.pl/engpw\">Warsaw University of Technology</LinkMaterial>.</p>\r\n                    <h1 className=\"title text-left\">Tools used</h1>\r\n                    <ul className=\"list\">\r\n                        <li>Microsoft Visual Studio Code Version 1.81.1</li>\r\n                        <li>Node.js Version 18.18.0</li>\r\n                        <li>React Version</li>\r\n                        <li>Material-UI Version</li>\r\n                        <li>MongoDB</li>\r\n                        <li><s>Heroku</s> Cyclic</li>\r\n                        <li>Netlify </li>\r\n                    </ul>\r\n                    <Link to='/'> Go Back</Link>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Footer from './Components/Structure/Footer';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport About from './Components/Structure/About'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode >\r\n    <Router>\r\n      <Route path='/' exact render={() => (\r\n        <App />\r\n      )} />\r\n      <Route path='/about' component={About} />\r\n      <Footer />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}